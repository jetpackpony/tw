import { expect } from 'chai';
import { parseMessage, parseUnencryptedPayload } from './parser';
import { bytesToHex, bytesToInt } from '../utils';

describe.only('MessageParser', function () {
  describe('parse unencrypted message', function () {
    it('should parse unencrypted message', async () => {
      const input = new Uint8Array([0,0,0,0,0,0,0,0,1,112,87,16,191,3,207,93,72,0,0,0,99,36,22,5,118,103,186,231,23,153,68,130,130,70,220,225,69,252,12,139,17,71,49,84,253,114,167,213,163,159,238,43,177,164,54,168,8,40,167,46,94,56,185,206,185,0,0,0,21,196,181,28,2,0,0,0,2,159,75,161,109,16,146,150,33,107,232,108,2,43,180,195]);
      const output = {
        "auth_key_id": "0000000000000000",
        "message_id": "01705710bf03cf5d",
        "length": 72,
        "data": {
          "id": "85337187",
          "predicate": "resPQ",
          "type": "ResPQ",
          "params": {
            "nonce": new Uint8Array([118, 103, 186, 231, 23, 153, 68, 130, 130, 70, 220, 225, 69, 252, 12, 139]),
            "server_nonce": new Uint8Array([17, 71, 49, 84, 253, 114, 167, 213, 163, 159, 238, 43, 177, 164, 54, 168]),
            "pq": new Uint8Array([40, 167, 46, 94, 56, 185, 206, 185]),
            "server_public_key_fingerprints": [
              new Uint8Array([2, 159, 75, 161, 109, 16, 146, 150]),
              new Uint8Array([33, 107, 232, 108, 2, 43, 180, 195])
            ]
          }
        }
      };
      const res = await parseMessage(input);
      expect(res).to.eql(output);
    });

    it('should parse unencrypted message', async () => {
      const input = new Uint8Array([0,0,0,0,0,0,0,0,1,136,12,255,4,4,207,93,120,2,0,0,92,7,232,208,38,7,67,243,104,250,28,185,159,165,245,137,57,166,89,17,169,35,55,158,175,125,126,158,110,18,237,170,17,200,37,189,254,80,2,0,141,16,64,109,210,195,174,150,154,20,33,73,195,166,10,73,130,99,17,44,128,187,149,90,10,16,255,20,241,4,216,94,200,8,149,203,80,227,40,28,80,171,84,100,169,143,221,45,82,15,129,44,153,238,98,102,5,119,185,149,213,153,73,143,32,15,213,178,26,191,47,23,150,233,242,63,226,234,5,125,93,199,5,164,244,58,227,90,110,252,132,228,4,115,125,55,209,101,145,195,222,91,232,13,44,25,67,163,133,230,76,74,154,126,209,203,111,216,43,102,239,221,223,16,115,50,12,68,118,226,248,231,46,232,242,180,232,252,9,242,244,125,69,199,100,252,140,55,101,131,8,186,8,155,168,96,141,233,172,68,148,22,74,1,15,240,158,182,82,97,162,68,67,120,74,142,195,222,79,162,116,54,55,195,79,141,47,69,51,83,149,196,239,84,34,147,67,66,120,47,181,211,25,107,174,192,2,39,232,105,20,68,19,103,206,148,106,68,193,24,128,237,51,70,43,65,99,77,37,20,171,160,100,0,244,111,7,148,126,3,5,148,209,208,78,72,1,178,68,13,231,119,216,104,166,221,216,25,72,222,240,16,130,16,57,40,168,108,126,133,82,10,57,98,134,214,192,1,237,237,199,183,129,190,133,93,191,19,106,212,168,226,103,18,178,145,236,7,117,102,176,8,30,67,190,1,26,175,92,233,175,209,18,69,7,43,60,201,165,21,246,112,169,35,33,230,248,37,229,72,48,147,5,223,52,193,140,227,107,91,204,108,233,51,109,86,23,225,72,45,70,157,253,132,36,137,118,235,93,107,40,15,87,83,93,239,52,69,126,51,155,188,94,181,39,4,167,46,11,199,210,166,81,230,68,192,21,35,90,23,13,112,165,34,208,103,130,148,68,60,78,79,76,29,54,180,105,190,47,64,50,196,236,67,106,155,232,215,48,201,100,211,140,128,235,153,66,1,157,15,115,13,28,172,92,12,222,7,219,79,11,165,184,181,47,110,117,58,6,216,47,183,74,122,83,41,21,9,188,3,128,220,210,247,252,250,96,6,152,189,226,205,125,65,207,140,199,3,6,222,221,178,91,123,10,70,139,59,168,163,178,114,101,154,66,42,51,105,122,124,202,144,148,159,231,46,146,226,65,200,166,89,90,76,190,204,91,66,225,38,160,114,113,163,101,187,179,211,78,197,119,41,227,87,185,70,229,246,64,169,68,27,26,155,25,239,205,131,178,221,211,14,244,31,70,210,234,126,130,113,243,165,244,96,20,191,171,129,204,20,147,130,145,124,160,199,215,242,227,11,240,57,103,146,135,140,51,146,40,55,100,179]);
      const output = {
        "auth_key_id": "0000000000000000",
        "message_id": "01880cff0404cf5d",
        "length": 632,
        "data": {
          "id": "-790100132",
          "predicate": "server_DH_params_ok",
          "type": "Server_DH_Params",
          "params": {
            "nonce": new Uint8Array([38, 7, 67, 243, 104, 250, 28, 185, 159, 165, 245, 137, 57, 166, 89, 17]),
            "server_nonce": new Uint8Array([169, 35, 55, 158, 175, 125, 126, 158, 110, 18, 237, 170, 17, 200, 37, 189]),
            "encrypted_answer": new Uint8Array([141,16,64,109,210,195,174,150,154,20,33,73,195,166,10,73,130,99,17,44,128,187,149,90,10,16,255,20,241,4,216,94,200,8,149,203,80,227,40,28,80,171,84,100,169,143,221,45,82,15,129,44,153,238,98,102,5,119,185,149,213,153,73,143,32,15,213,178,26,191,47,23,150,233,242,63,226,234,5,125,93,199,5,164,244,58,227,90,110,252,132,228,4,115,125,55,209,101,145,195,222,91,232,13,44,25,67,163,133,230,76,74,154,126,209,203,111,216,43,102,239,221,223,16,115,50,12,68,118,226,248,231,46,232,242,180,232,252,9,242,244,125,69,199,100,252,140,55,101,131,8,186,8,155,168,96,141,233,172,68,148,22,74,1,15,240,158,182,82,97,162,68,67,120,74,142,195,222,79,162,116,54,55,195,79,141,47,69,51,83,149,196,239,84,34,147,67,66,120,47,181,211,25,107,174,192,2,39,232,105,20,68,19,103,206,148,106,68,193,24,128,237,51,70,43,65,99,77,37,20,171,160,100,0,244,111,7,148,126,3,5,148,209,208,78,72,1,178,68,13,231,119,216,104,166,221,216,25,72,222,240,16,130,16,57,40,168,108,126,133,82,10,57,98,134,214,192,1,237,237,199,183,129,190,133,93,191,19,106,212,168,226,103,18,178,145,236,7,117,102,176,8,30,67,190,1,26,175,92,233,175,209,18,69,7,43,60,201,165,21,246,112,169,35,33,230,248,37,229,72,48,147,5,223,52,193,140,227,107,91,204,108,233,51,109,86,23,225,72,45,70,157,253,132,36,137,118,235,93,107,40,15,87,83,93,239,52,69,126,51,155,188,94,181,39,4,167,46,11,199,210,166,81,230,68,192,21,35,90,23,13,112,165,34,208,103,130,148,68,60,78,79,76,29,54,180,105,190,47,64,50,196,236,67,106,155,232,215,48,201,100,211,140,128,235,153,66,1,157,15,115,13,28,172,92,12,222,7,219,79,11,165,184,181,47,110,117,58,6,216,47,183,74,122,83,41,21,9,188,3,128,220,210,247,252,250,96,6,152,189,226,205,125,65,207,140,199,3,6,222,221,178,91,123,10,70,139,59,168,163,178,114,101,154,66,42,51,105,122,124,202,144,148,159,231,46,146,226,65,200,166,89,90,76,190,204,91,66,225,38,160,114,113,163,101,187,179,211,78,197,119,41,227,87,185,70,229,246,64,169,68,27,26,155,25,239,205,131,178,221,211,14,244,31,70,210,234,126,130,113,243,165,244,96,20,191,171,129,204,20,147,130,145,124,160,199,215,242,227,11,240,57,103,146,135,140,51,146,40,55,100,179]),
          }
        }
      };
      const res = await parseMessage(input);
      expect(res).to.eql(output);
    });

    it('should parse a inner constructor', async () => {
      const input = new Uint8Array([186,13,137,181,122,102,158,153,38,52,76,87,186,81,187,87,13,215,158,192,68,184,7,233,136,171,175,182,255,158,143,249,43,188,44,94,3,0,0,0,254,0,1,0,199,28,174,185,198,177,201,4,142,108,82,47,112,241,63,115,152,13,64,35,142,62,33,193,73,52,208,55,86,61,147,15,72,25,138,10,167,193,64,88,34,148,147,210,37,48,244,219,250,51,111,110,10,201,37,19,149,67,174,212,76,206,124,55,32,253,81,246,148,88,112,90,198,140,212,254,107,107,19,171,220,151,70,81,41,105,50,132,84,241,143,175,140,89,95,100,36,119,254,150,187,42,148,29,91,205,29,74,200,204,73,136,7,8,250,155,55,142,60,79,58,144,96,190,230,124,249,164,164,166,149,129,16,81,144,126,22,39,83,181,107,15,107,65,13,186,116,216,168,75,42,20,179,20,78,14,241,40,71,84,253,23,237,149,13,89,101,180,185,221,70,88,45,177,23,141,22,156,107,196,101,176,214,255,156,163,146,143,239,91,154,228,228,24,252,21,232,62,190,160,248,127,169,255,94,237,112,5,13,237,40,73,244,123,249,89,217,86,133,12,233,41,133,31,13,129,21,246,53,177,5,238,46,78,21,208,75,36,84,191,111,79,173,240,52,177,4,3,17,156,216,227,185,47,204,91,254,0,1,0,166,155,239,229,146,27,165,194,88,81,243,155,250,232,115,140,228,135,204,21,90,28,90,167,52,239,206,110,223,243,192,204,66,143,125,184,241,137,92,192,177,183,226,239,48,186,203,88,30,219,192,48,17,240,223,65,43,10,78,238,159,47,154,79,126,140,140,205,73,192,170,118,184,235,4,35,149,18,22,179,163,58,43,112,229,130,24,4,56,177,241,60,254,197,44,144,123,107,170,146,74,178,74,92,235,137,19,217,11,181,48,202,6,155,137,139,215,92,90,49,98,142,73,174,32,127,43,161,37,28,32,239,22,4,196,160,1,206,172,78,132,202,233,168,43,73,14,35,41,19,191,99,147,217,39,193,121,231,60,107,113,134,226,9,117,159,92,100,187,199,88,12,184,13,251,85,35,207,31,155,80,14,90,33,247,100,109,216,28,97,32,0,181,17,45,113,0,180,51,7,140,146,75,18,137,245,31,109,37,225,213,134,100,226,144,225,224,213,191,72,236,228,71,247,165,179,25,174,221,62,167,39,144,43,145,189,136,132,245,87,111,154,105,103,144,70,144,174,224,37,239,29,149,87,241,57,218,220,207,93]);
      const output = {
        "id": "-1249309254",
        "predicate": "server_DH_inner_data",
        "type": "Server_DH_inner_data",
        "params": {
          "nonce": new Uint8Array([122, 102, 158, 153, 38, 52, 76, 87, 186, 81, 187, 87, 13, 215, 158, 192]),
          "server_nonce": new Uint8Array([68, 184, 7, 233, 136, 171, 175, 182, 255, 158, 143, 249, 43, 188, 44, 94]),
          "g": 3,
          "dh_prime": new Uint8Array([199, 28, 174, 185, 198, 177, 201, 4, 142, 108, 82, 47, 112, 241, 63, 115, 152, 13, 64, 35, 142, 62, 33, 193, 73, 52, 208, 55, 86, 61, 147, 15, 72, 25, 138, 10, 167, 193, 64, 88, 34, 148, 147, 210, 37, 48, 244, 219, 250, 51, 111, 110, 10, 201, 37, 19, 149, 67, 174, 212, 76, 206, 124, 55, 32, 253, 81, 246, 148, 88, 112, 90, 198, 140, 212, 254, 107, 107, 19, 171, 220, 151, 70, 81, 41, 105, 50, 132, 84, 241, 143, 175, 140, 89, 95, 100, 36, 119, 254, 150, 187, 42, 148, 29, 91, 205, 29, 74, 200, 204, 73, 136, 7, 8, 250, 155, 55, 142, 60, 79, 58, 144, 96, 190, 230, 124, 249, 164, 164, 166, 149, 129, 16, 81, 144, 126, 22, 39, 83, 181, 107, 15, 107, 65, 13, 186, 116, 216, 168, 75, 42, 20, 179, 20, 78, 14, 241, 40, 71, 84, 253, 23, 237, 149, 13, 89, 101, 180, 185, 221, 70, 88, 45, 177, 23, 141, 22, 156, 107, 196, 101, 176, 214, 255, 156, 163, 146, 143, 239, 91, 154, 228, 228, 24, 252, 21, 232, 62, 190, 160, 248, 127, 169, 255, 94, 237, 112, 5, 13, 237, 40, 73, 244, 123, 249, 89, 217, 86, 133, 12, 233, 41, 133, 31, 13, 129, 21, 246, 53, 177, 5, 238, 46, 78, 21, 208, 75, 36, 84, 191, 111, 79, 173, 240, 52, 177, 4, 3, 17, 156, 216, 227, 185, 47, 204, 91]),
          "g_a": new Uint8Array([166, 155, 239, 229, 146, 27, 165, 194, 88, 81, 243, 155, 250, 232, 115, 140, 228, 135, 204, 21, 90, 28, 90, 167, 52, 239, 206, 110, 223, 243, 192, 204, 66, 143, 125, 184, 241, 137, 92, 192, 177, 183, 226, 239, 48, 186, 203, 88, 30, 219, 192, 48, 17, 240, 223, 65, 43, 10, 78, 238, 159, 47, 154, 79, 126, 140, 140, 205, 73, 192, 170, 118, 184, 235, 4, 35, 149, 18, 22, 179, 163, 58, 43, 112, 229, 130, 24, 4, 56, 177, 241, 60, 254, 197, 44, 144, 123, 107, 170, 146, 74, 178, 74, 92, 235, 137, 19, 217, 11, 181, 48, 202, 6, 155, 137, 139, 215, 92, 90, 49, 98, 142, 73, 174, 32, 127, 43, 161, 37, 28, 32, 239, 22, 4, 196, 160, 1, 206, 172, 78, 132, 202, 233, 168, 43, 73, 14, 35, 41, 19, 191, 99, 147, 217, 39, 193, 121, 231, 60, 107, 113, 134, 226, 9, 117, 159, 92, 100, 187, 199, 88, 12, 184, 13, 251, 85, 35, 207, 31, 155, 80, 14, 90, 33, 247, 100, 109, 216, 28, 97, 32, 0, 181, 17, 45, 113, 0, 180, 51, 7, 140, 146, 75, 18, 137, 245, 31, 109, 37, 225, 213, 134, 100, 226, 144, 225, 224, 213, 191, 72, 236, 228, 71, 247, 165, 179, 25, 174, 221, 62, 167, 39, 144, 43, 145, 189, 136, 132, 245, 87, 111, 154, 105, 103, 144, 70, 144, 174, 224, 37, 239, 29, 149, 87, 241, 57]),
          "server_time": 1573903578
        }
      };
      const res = await parseUnencryptedPayload(input);
      expect(res).to.eql(output);
    });

    it('should parse unencrypted message', async () => {
      const input = new Uint8Array([0,0,0,0,0,0,0,0,1,12,18,2,38,4,207,93,52,0,0,0,52,247,203,59,9,88,129,53,242,238,160,135,5,118,226,122,168,138,29,152,8,138,156,56,94,80,217,102,150,47,56,116,156,120,207,173,196,78,64,183,146,126,239,113,118,13,68,134,153,209,238,97]);
      const output = {
        "auth_key_id": "0000000000000000",
        "message_id": "010c12022604cf5d",
        "length": 52,
        "data": {
          "id": "1003222836",
          "predicate": "dh_gen_ok",
          "type": "Set_client_DH_params_answer",
          "params": {
            "nonce": new Uint8Array([9, 88, 129, 53, 242, 238, 160, 135, 5, 118, 226, 122, 168, 138, 29, 152]),
            "server_nonce": new Uint8Array([8, 138, 156, 56, 94, 80, 217, 102, 150, 47, 56, 116, 156, 120, 207, 173]),
            "new_nonce_hash1": new Uint8Array([196, 78, 64, 183, 146, 126, 239, 113, 118, 13, 68, 134, 153, 209, 238, 97])
          }
        }
      };
      const res = await parseMessage(input);
      expect(res).to.eql(output);
    });
  });

  describe('parse encrypted message', function () {
    it('should parse encrypted message', async () => {
      const input = new Uint8Array([55,173,91,4,199,244,17,200,175,192,79,139,19,174,97,86,203,3,138,120,243,80,143,202,121,198,31,231,46,18,111,57,42,87,86,91,249,27,92,188,182,169,230,198,168,40,190,238,47,28,130,172,246,54,188,114,177,43,3,166,90,129,243,161,242,10,190,217,254,156,139,121,178,68,21,140,250,38,5,3,129,211,127,223,216,117,55,55,23,172,80,12,72,123,145,9,189,76,219,106,75,76,241,210,7,204,22,57,248,247,255,153,70,168,171,109,62,242,223,44,132,30,38,7,225,195,13,63,234,237,61,230,84,240,201,92,69,213,223,226,43,38,254,33,77,52,44,38,40,221,64,61,150,140,149,215,68,125,251,9,165,144,38,249,8,104,193,28]);
      const authKey = new Uint8Array([55,133,28,223,65,185,141,71,184,0,136,72,49,104,195,172,29,201,231,173,190,197,51,243,23,59,75,79,246,254,201,239,76,255,77,129,18,59,57,118,98,52,48,143,95,111,95,84,67,93,190,172,130,252,182,156,18,40,251,150,220,120,201,223,194,165,236,170,211,22,230,222,116,150,230,26,69,116,33,70,244,155,9,201,216,57,18,132,182,75,51,197,20,101,205,61,107,97,113,16,6,229,88,240,130,163,135,38,33,135,82,119,178,7,88,247,19,50,131,110,57,28,236,248,42,52,225,130,50,209,137,21,24,181,193,122,34,251,129,82,138,155,213,163,183,44,163,29,4,49,245,32,173,159,59,154,198,209,17,9,111,151,141,25,97,195,143,244,179,68,141,55,197,239,89,43,26,104,123,235,198,169,167,198,49,9,19,109,101,169,39,69,6,63,166,150,35,137,190,32,151,186,87,26,171,222,77,156,5,244,170,86,165,150,230,150,33,164,253,60,194,55,114,5,144,26,164,105,10,140,92,242,167,49,86,230,252,177,137,138,33,255,21,60,215,210,94,125,250,186,245,62,161,0,68,169]);
      const output = {
        "auth_key_id": "37ad5b04c7f411c8",
        "msg_key": new Uint8Array([175,192,79,139,19,174,97,86,203,3,138,120,243,80,143,202]),
        "encrypted_data": new Uint8Array([121,198,31,231,46,18,111,57,42,87,86,91,249,27,92,188,182,169,230,198,168,40,190,238,47,28,130,172,246,54,188,114,177,43,3,166,90,129,243,161,242,10,190,217,254,156,139,121,178,68,21,140,250,38,5,3,129,211,127,223,216,117,55,55,23,172,80,12,72,123,145,9,189,76,219,106,75,76,241,210,7,204,22,57,248,247,255,153,70,168,171,109,62,242,223,44,132,30,38,7,225,195,13,63,234,237,61,230,84,240,201,92,69,213,223,226,43,38,254,33,77,52,44,38,40,221,64,61,150,140,149,215,68,125,251,9,165,144,38,249,8,104,193,28]),
        "message": {
          "salt": new Uint8Array([83,202,131,183,224,169,15,109]),
          "session_id": new Uint8Array([107,18,209,156,77,98,133,156]),
          "msg_id": "01141661edf3cf5d",
          "seq_no": 2,
          "message_data_length": 88,
          "data": {
            "id": "1945237724",
            "predicate": "msg_container",
            "params": {
              "messages": [
                {
                  "id": "1538843921",
                  "predicate": "message",
                  "params": {
                    "msg_id": new Uint8Array([1,180,21,97,237,243,207,93]),
                    "seqno": 1,
                    "bytes": 28,
                    "body": {
                      "id": "-1631450872",
                      "predicate": "new_session_created",
                      "params": {
                        "first_msg_id": new Uint8Array([0,0,0,0,251,243,207,93]),
                        "unique_id": new Uint8Array([217,251,178,102,184,61,36,131]),
                        "server_salt": new Uint8Array([83,202,131,183,224,169,15,109])
                      },
                      "type": "NewSession"
                    }
                  },
                  "type": "Message"
                },
                {
                  "id": "1538843921",
                  "predicate": "message",
                  "params": {
                    "msg_id": new Uint8Array([1,224,21,97,237,243,207,93]),
                    "seqno": 2,
                    "bytes": 20,
                    "body": {
                      "id": "880243653",
                      "predicate": "pong",
                      "params": {
                        "msg_id": new Uint8Array([0,0,0,0,251,243,207,93]),
                        "ping_id": new Uint8Array([0,0,0,0,0,0,0,0])
                      },
                      "type": "Pong"
                    }
                  },
                  "type": "Message"
                }
              ]
            },
            "type": "MessageContainer"
          }
        }
      };
      const res = await parseMessage(input, authKey);
      expect(res).to.eql(output);
    });
  });
});
